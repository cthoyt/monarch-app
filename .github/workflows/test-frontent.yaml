# workflow that tests and quality-checks app on pull requests
name: Test Frontend

on: pull_request

env:
  CACHE_PATH: |
    ~/.cache/Cypress
    frontend/node_modules

defaults:
  run:
    working-directory: ./frontend

jobs:

  # check-env:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Check working directory
  #       run: |
  #         echo "CURRENT DIR: $(pwd)"
  #         ls -al
  #         echo "CACHE_PATH: ${CACHE_PATH}"


  # Build cache of yarn packages for rest of jobs
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: yarn
          cache-dependency-path: frontend/yarn.lock
      - name: Install packages
        run: yarn install
      - name: Define cache key
        id: define-key
        run: echo "::set-output name=key::tests-cache-key-$(date '+%s')"
      - name: Store cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ steps.define-key.outputs.key }}
    outputs:
      cache-key: ${{ steps.define-key.outputs.key }}


  # test that app can build without issues
  test-build:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run test
        run: |
          npx update-browserslist-db@latest
          yarn build


  # test that app is properly formatted and linted
  test-lint:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run test
        run: |
          npx update-browserslist-db@latest
          yarn test:lint


  # run unit tests
  test-unit:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run test
        run: |
          npx update-browserslist-db@latest
          yarn test:unit


  # run end to end integration tests
  test-e2e:
    runs-on: ubuntu-latest
    needs: install-cache
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run test
        run: |
          npx update-browserslist-db@latest
          yarn test:e2e


  # run accessibility tests
  test-accessibility:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}
      - name: Run test
        run: |
          npx update-browserslist-db@latest
          yarn test:axe
